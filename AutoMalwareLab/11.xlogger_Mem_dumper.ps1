Set-ExecutionPolicy Bypass -Scope Process -Force

# Define paths
$baseDir = "C:\tools"
$tempDir = "$env:TEMP"
$xloggerArchive = "$tempDir\XLogger_withDLLs.7z"
$deleteDllZip = "$tempDir\deleteDllFilesFile.zip"
$sevenZipInstaller = "$tempDir\7zInstaller.exe"

$procDumpFolder = "$baseDir\memory_dumper"
$xloggerExtractFolder = "$baseDir\xlogger"

# Python scripts
$script1 = "Xlogger_Parser_blacklist_remove.py"
$script2 = "Xlogger_Parser_Whitelist_only.py"

function Download-File {
    param ($url, $destination)
    Invoke-WebRequest -Uri $url -OutFile $destination -UseBasicParsing
}

function Install-7Zip {
    $sevenZipInstallPath = "${env:ProgramFiles}\7-Zip"
    $sevenZipExe = Join-Path $sevenZipInstallPath "7z.exe"

    if (Test-Path $sevenZipExe) {
        Write-Host "7-Zip already installed at $sevenZipExe"
        return $sevenZipExe
    }

    Write-Host "7-Zip not found. Installing silently..."
    $sevenZipUrl = "https://www.7-zip.org/a/7z2301-x64.exe"
    Download-File $sevenZipUrl $sevenZipInstaller
    Start-Process -FilePath $sevenZipInstaller -ArgumentList "/S" -Wait

    if (Test-Path $sevenZipExe) {
        Write-Host "7-Zip installed successfully at $sevenZipExe"
        return $sevenZipExe
    }
    else {
        throw "Failed to install 7-Zip."
    }
}

function Extract-7z {
    param (
        [string]$archive,
        [string]$destination,
        [string]$sevenZipExePath
    )
    & $sevenZipExePath x $archive "-o$destination" -y | Out-Null
}

# Prepare base folders
New-Item -ItemType Directory -Force -Path $baseDir | Out-Null
New-Item -ItemType Directory -Force -Path $procDumpFolder | Out-Null
New-Item -ItemType Directory -Force -Path $xloggerExtractFolder | Out-Null

# Install or get 7-Zip path
$sevenZipPath = Install-7Zip

# Step 1: Download and extract XLogger archive
Write-Host "Downloading XLogger archive..."
Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/Xlogger-API-logger/XLogger-withDLL's.7z" $xloggerArchive

Write-Host "Extracting XLogger archive..."
Extract-7z -archive $xloggerArchive -destination $xloggerExtractFolder -sevenZipExePath $sevenZipPath

# Step 2: Download Python parser scripts into xLogger_win32 and xLogger_win64 folders
$parserFolders = @("$xloggerExtractFolder\xLogger_win32", "$xloggerExtractFolder\xLogger_win64")
foreach ($folder in $parserFolders) {
    New-Item -ItemType Directory -Force -Path $folder | Out-Null

    Write-Host "Downloading Python scripts into $folder ..."
    Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/Xlogger-API-logger/$script1" "$folder\$script1"
    Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/Xlogger-API-logger/$script2" "$folder\$script2"
}



# Step 5: Download pd32.exe, pd64.exe, and deleteDllFilesFile.exe directly into memory dumper folder (no extraction)
Write-Host "Downloading pd32.exe, pd64.exe, and deleteDllFilesFile.exe ..."
Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/memory_dumping/pd32.exe" "$procDumpFolder\pd32.exe"
Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/memory_dumping/pd64.exe" "$procDumpFolder\pd64.exe"
Download-File "https://github.com/amohanta/Malware_Analysis_Tools-third_party/raw/main/memory_dumping/deleteDllFilesFile.exe" "$procDumpFolder\deleteDllFilesFile.exe"

Write-Host "All tools and scripts have been downloaded and extracted into $baseDir."
